const PersonType = new GraphQLObjectType({
  name: 'Person',
  description: 'This is a Person',

  fields: () => ({
    name: {
      type: GraphQLString,
      description: 'Name of Person'
    },
    id: { type: GraphQLString }
  })
});

const RootQueryType = new GraphQLObjectType({
  /* Same as before... */
});

const Mutation = new GraphQLObjectType({
  name: "PersonMutations",
  description: "Mutations of our Person",
  fields: () => ({
    createPost: {
      type: PersonType,
      args: {
        name: {
          type:
            new GraphQLNonNull(GraphQLString)
        },
      },
      resolve: (source, args, context) => {
        console.log(args.name);
        return http.post(`/api/person/`, args)
                   .then( res => res.data );
      }
    }
  })
});

export default new GraphQLSchema({
  query: RootQueryType,
  mutation: Mutation
});

/* **
mutation {
  createPerson(name: "UltiMatt") {
    name,
    id
  }
}
** */
